Crates - extensible 3D puzzle game.
Copyright (C) 2008-2010  Octaspire (www.octaspire.com)

This program is free software: you  can  redistribute  it  and/or
modify  it  under  the terms of the GNU General Public License as
published by the Free Software Foundation, either  version  3  of
the License, or (at your option) any later version.

This  program  is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the  implied  warranty  of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.


CONTENTS
---------

1. INTRODUCTION
2. SYSTEM REQUIREMENTS
3. CONTROLS
4. FURTHER INFORMATION
5. CREDITS
6. SOME CRATE SYMBOLS
7. NOTES
8. BUGS
9. SOURCE DIRECTORY TREE


1. INTRODUCTION
----------------

Crates  is  a  three dimensional puzzle game. It consists of mis-
sions that consist of levels. To pass a mission,  you  must  move
player  to  the  exit  by interacting with the different kinds of
crates in the level.  Before that you must also collect  all  the
keys and toggle all the toggles that the level might contain. Ev-
ery level has a password that makes it possible to continue play-
ing  from  that  level  whenever you want, but if you want to get
your name in the hall of fame, you must play the whole mission at
one  go. On that case, the faster you are, the better is your po-
sition in the hall of fame.

Crates is controlled with a keyboard or a gamepad. Passwords  can
be written faster with the alphanumeric keys of the keyboard or a
little slower by using the D-pad of gamepad to select the letters
one at a time.  The default buttons of the gamepad and many other
settings of the game can be changed in a configuration file  con-
fig.lua in the resources-directory of the game. Sound effects are
disabled as a default, and if you want to enable them you can  do
it  by changing setting config.sounds from false into true in the
configuration file. See the configuration file for the other con-
figurable settings.

Player is moved around with a keyboard or a gamepad. It continues
movement until something stops it. It can be moved only  when  it
is  not  already moving - you cannot change player's direction if
it is moving. If nothing stops it, it will fly out of  the  level
and the level is restarted.


2. SYSTEM REQUIREMENTS
-----------------------

    - GNU/Linux, Microsoft Windows, Mac OS X or FreeBSD
    - 3  MB free hard disk space
    - 17 MB free RAM available
    - Accelerated graphics hardware
    - Sound card
    - Keyboard or Gamepad

Game is currently tested  only in  Ubuntu GNU/Linux,  Windows XP,
Mac OS X and FreeBSD.   Other  versions  might  come later.   For
Windows  there  is  an  installer  available  that  installs  and
uninstalls  a binary version  of  the game  automatically.    For
GNU/Linux,  Mac OS X  and  FreeBSD  there isnâ€™t currently such an
installer (might come later),  so in these systems game needs  to
be compiled  from  the  source  code. Your system  should already
have a   C compiler  and  make  available. If not, install  those
(gcc and make).  Then  install development versions of the latest
stable versions of  SDL 1.2,  SDL_mixer 1.2,  libpng,  zlib   and
Lua 5.1. Then use the provided  Makefile.X,  where  X  is    your
platform, to build crates.  Note  that  in FreeBSD you should use
gmake (write "gmake" instead of "make").  See  file  INSTALL  for
more thorough explanation.


3. CONTROLS
------------

Game is controlled with a keyboard or a gamepad. The default con-
trols are listed below. The default buttons  of  gamepad  can  be
changed in the configuration file.

  Keyboard          Action          Gamepad
  ------------------------------------------
  Esc      Exit to previous state   Button-9
  Return           Accept           Button-1
  R            Restart level        Button-10
  Arrows            Move            D-pad (also sticks)


4. FURTHER INFORMATION
-----------------------

The man-directory contains one or more manuals that can be useful
for  GNU/Linux, Mac OS X  and FreeBSD users. The crates  homepage
www.octaspire.com/crates/  contains  also more  information.  You
might find there  new missions, extensions and other  new content
for crates also.


5. CREDITS
-----------

Crates is written in the programming languages C and Lua. It uses
SDL,  SDL_mixer,  libpng, zlib and OpenGL. Sound effects are made
using ZynAddSubFX Software Synthesizer and Audacity.  Some of the
graphics are made with GIMP and some with Inkscape.  Textures are
drawn/edited  with  GIMP.   The background image used in menus is
created and rendered with Blender.  Some of the textures  contain
(possibly  modified) parts from the public domain Blender Texture
Disc.  The image for the font texture is generated  automatically
with a Java program.


6. SOME CRATE SYMBOLS
----------------------

The  listing  below contains some symbols for the different kinds
of crates. These are used when building missions and  levels  for
the game.

  block          XX
  bomb           BB
  counter        ##
  exit           @@
  inversecounter !#
  key            $$
  player         &&
  pullere        >>
  pulleren       >^
  pulleres       >.
  pullern        ^^
  pullernw       <^
  pullers        ..
  pullersw       <.
  pullerw        <<
  remotecontrol  RC
  sensor         []
  slopeen        |_
  slopees        |"
  slopewn        _|
  slopews        "|
  steelbomb      SB
  trigger        !!
  turnstilee     T>
  turnstilen     T^
  turnstiles     T.
  turnstilew     T<
  turnstilee1    1>
  turnstilen1    1^
  turnstiles1    1.
  turnstilew1    1<


7. NOTES
---------

Crates uses major.minor.build version numbering scheme as defined
in http://docs.rubygems.org/read/chapter/7


8. BUGS
--------

If   you   find  a  bug,   please   see   the   crates   homepage
www.octaspire.com/crates/    for   up-to-date   instructions   on
reporting bugs.

Please note that if  you  enable  sounds  and  your  systems  has
PulseAudio,  the SDL(_mixer) + PulseAudio combination might cause
problems at least on some  GNU/Linux-systems.   See  for  example
"the  pulseaudio  hack".  For  example, at the time of writing in
Ubuntu, if your system has SDL with ALSA option (libsdl1.2debian-
alsa)  installed,  sounds  might  be crackling, channels will ebb
away and game will get jammed when you try to  quit  playing.  In
this  case  removing libsdl1.2debian-alsa and installing SDL with
PulseAudio options (libsdl1.2debian-pulseaudio) instead helped.


9. SOURCE DIRECTORY TREE
-------------------------

.
|-- COPYING                       => License information for crates
|-- HISTORY                       => Listing of changes between versions
|-- INSTALL                       => Installation instructions for all platforms
|-- Makefile.freebsd              => FreeBSD makefile (use gmake)
|-- Makefile.linux                => GNU/Linux makefile
|-- Makefile.macosx               => Mac OS X  makefile
|-- Makefile.windows              => Windows makefile, mainly for Dev-C++
|-- README                        => This file
|-- etc                           => Directory containing misc. useful files
|   |-- bm.pl                        => Perl script for makefile building
|   `-- crates.nsi                   => NSIS installer script for windows
|-- man                           => Directory containing manual pages for crates
|   |-- man5                         => "File formats and conventions"
|   `-- man6                         => Directory for manuals about "Games"
|       `-- crates.6                    => Manual page for the crates program
|-- resources                     => All the resources of the game
|   |-- config.lua                   => Configuration file for crates
|   |-- entities                     => All the game objects (or crates)
|   |   |-- automaticsteelbomb.lua
|   |   |-- block.lua
|   |   |-- bomb.lua
|   |   |-- counter.lua
|   |   |-- exit.lua
|   |   |-- inversecounter.lua
|   |   |-- key.lua
|   |   |-- player.lua
|   |   |-- pullere.lua
|   |   |-- pulleren.lua
|   |   |-- pulleres.lua
|   |   |-- pullerew.lua
|   |   |-- pullern.lua
|   |   |-- pullerns.lua
|   |   |-- pullernw.lua
|   |   |-- pullers.lua
|   |   |-- pullersw.lua
|   |   |-- pullerw.lua
|   |   |-- remotecontrol.lua
|   |   |-- slopeen.lua
|   |   |-- slopees.lua
|   |   |-- slopewn.lua
|   |   |-- slopews.lua
|   |   |-- steelbomb.lua
|   |   |-- teleport.lua
|   |   |-- toggle.lua
|   |   |-- trigger.lua
|   |   |-- turnstilee.lua
|   |   |-- turnstilee1.lua
|   |   |-- turnstilen.lua
|   |   |-- turnstilen1.lua
|   |   |-- turnstiles.lua
|   |   |-- turnstiles1.lua
|   |   |-- turnstilew.lua
|   |   `-- turnstilew1.lua
|   |-- halloffame                   => Directory containing the Hall of Fame
|   |   `-- default                     => Hall of Fame for the default mission
|   |-- images                       => Directory containing images for icons
|   |   |-- crateslogo16x16x32.ico
|   |   |-- crateslogo16x16x4.ico
|   |   |-- crateslogo16x16x8.ico
|   |   |-- crateslogo24x24x32.ico
|   |   |-- crateslogo24x24x4.ico
|   |   |-- crateslogo24x24x8.ico
|   |   |-- crateslogo48x48x32.ico
|   |   |-- crateslogo48x48x4.ico
|   |   `-- crateslogo48x48x8.ico
|   |-- meshes                       => Directory containing the 3D models
|   |   |-- cube.lua
|   |   |-- plate.lua
|   |   `-- player.lua
|   |-- missions                     => New missions can be dropped here.
|   |   `-- default.lua                 => The default mission.
|   |-- musics                       => Musics for the game, if any
|   |-- sounds                       => Sound effects for the game
|   |   |-- back.wav
|   |   |-- buzz.wav
|   |   |-- scifi.wav
|   |   |-- select.wav
|   |   |-- thump.wav
|   |   `-- tick.wav
|   |-- states                       => All the game states.
|   |   |-- about.lua
|   |   |-- game.lua
|   |   |-- halloffame.lua
|   |   |-- manual.lua
|   |   |-- menu.lua
|   |   |-- mission.lua
|   |   |-- missionpassed.lua
|   |   |-- missionpassedat1go.lua
|   |   `-- password.lua
|   `-- textures                     => Textures for the game
|       |-- bg1024x1024.png
|       |-- block.png
|       |-- bomb.png
|       |-- credits.png
|       |-- exit.png
|       |-- font.png
|       |-- inversecounter.png
|       |-- key.png
|       |-- manual1024x1024.png
|       |-- player.png
|       |-- pullere.png
|       |-- pulleren.png
|       |-- pulleres.png
|       |-- pullerew.png
|       |-- pullern.png
|       |-- pullerns.png
|       |-- pullernw.png
|       |-- pullers.png
|       |-- pullersw.png
|       |-- pullerw.png
|       |-- remotecontrol.png
|       |-- slopeen.png
|       |-- slopees.png
|       |-- slopewn.png
|       |-- slopews.png
|       |-- steelbomb.png
|       |-- teleport.png
|       |-- toggle.png
|       |-- turnstilee.png
|       |-- turnstilee1.png
|       |-- turnstilen.png
|       |-- turnstilen1.png
|       |-- turnstiles.png
|       |-- turnstiles1.png
|       |-- turnstilew.png
|       `-- turnstilew1.png
|-- src                           => C source code for the game
|   |-- main.c
|   |-- oaudiomanager.c
|   |-- oaudiomanager.h
|   |-- obits.h
|   |-- odir.h
|   |-- oentity.c
|   |-- oentity.h
|   |-- oentitymanager.c
|   |-- oentitymanager.h
|   |-- oerror.c
|   |-- oerror.h
|   |-- oevent.c
|   |-- oevent.h
|   |-- ofile.c
|   |-- ofile.h
|   |-- ogame.c
|   |-- ogame.h
|   |-- oglapi.c
|   |-- oglapi.h
|   |-- olevel.c
|   |-- olevel.h
|   |-- oluacapi.c
|   |-- oluacapi.h
|   |-- omap.c
|   |-- omap.h
|   |-- omeshmanager.c
|   |-- omeshmanager.h
|   |-- omessagestack.c
|   |-- omessagestack.h
|   |-- omission.c
|   |-- omission.h
|   |-- omissionmanager.c
|   |-- omissionmanager.h
|   |-- omusicmanager.c
|   |-- omusicmanager.h
|   |-- opngtotexture.c
|   |-- opngtotexture.h
|   |-- optrmap.c
|   |-- optrmap.h
|   |-- optrvector.c
|   |-- optrvector.h
|   |-- oscriptmanager.c
|   |-- oscriptmanager.h
|   |-- osettings.c
|   |-- osettings.h
|   |-- osoundmanager.c
|   |-- osoundmanager.h
|   |-- ostate.c
|   |-- ostate.h
|   |-- ostring.c
|   |-- ostring.h
|   |-- otextmanager.c
|   |-- otextmanager.h
|   |-- otexturemanager.c
|   |-- otexturemanager.h
|   |-- otimer.h
|   |-- otypes.h
|   |-- ovector.c
|   |-- ovector.h
|   |-- ovector3.c
|   |-- ovector3.h
|   |-- oversion.c
|   |-- oversion.h
|   |-- posix                        => Code for posix-compliant systems
|   |   |-- freebsd
|   |   |   `-- oexedirname.c
|   |   |-- linux                       => Code for GNU/Linux
|   |   |   `-- oexedirname.c
|   |   |-- macosx                      => Code for Mac OS X
|   |   |   `-- oexedirname.c
|   |   |-- odir.c
|   |   `-- otimer.c
|   |-- utils                        => Directory containing utility programs
|   |   `-- MakeFont.java
|   `-- windows                      => Code for windows
|       |-- odir.c
|       `-- otimer.c
|-- test                          => Directory containing unit tests for crates
    |-- check_omap.c
    |-- check_optrmap.c
    |-- check_optrvector.c
    |-- check_ostring.c
    |-- check_ovector.c
    `-- test.sh

22 directories, 189 files
